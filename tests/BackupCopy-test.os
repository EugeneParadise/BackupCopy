///////////////////////////////////////////////////////////////////////
//
// Тест для BackupCopy
//
///////////////////////////////////////////////////////////////////////
Перем юТест;
Перем Директория;
Перем ДиректорияДляКопирования;
Перем ПутьКЛогу;
Перем Лог;
Перем СрокВМинутах;
////////////////////////////////////////////////////////////////////
// Программный интерфейс

Функция Инициализация() 
	Директория = "FileSource";
	ДиректорияДляКопирования = "FileDestination";
	СрокВМинутах = 30;
    ПутьКЛогу = Директория+"\backup_log.log";
    Лог = Новый ЗаписьТекста(ПутьКЛогу);
КонецФункции


Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ПроверитьНеобходимостьКопирования");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьКопированиеФайла");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьЗаписьВЛог");
	Возврат ВсеТесты;

КонецФункции

Процедура ТестДолжен_ПроверитьНеобходимостьКопирования() Экспорт
	ИмяФайла1 = Директория+"\1.temp";
    ИмяФайла2 = Директория+"\2.temp";
	Файл = Новый ЗаписьТекста(ИмяФайла1);
    Файл.Записать("тест");
	Файл.Закрыть();    
    Файл = Новый Файл(ИмяФайла1);
    Файл.УстановитьВремяИзменения(ТекущаяДата()-40*60);
    
    Файл = Новый ЗаписьТекста(ИмяФайла2);
    Файл.Записать("тест");
	Файл.Закрыть();
    
    Результат1 = ТребуетсяСкопироватьФайл(Новый Файл(ИмяФайла1));
    Результат2 = ТребуетсяСкопироватьФайл(Новый Файл(ИмяФайла2));
	
    УдалитьФайлы(Директория,"*.temp");

	юТест.ПроверитьРавенство(Результат1,Ложь);
	юТест.ПроверитьРавенство(Результат2,Истина);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьКопированиеФайла() Экспорт
	
    ИмяФайла = Директория+"\1.temp";
    ИмяКопии = ДиректорияДляКопирования+"\1.temp";

    Файл = Новый Файл(ИмяКопии);
    Результат = Файл.Существует(); 
    юТест.ПроверитьРавенство(Результат,Ложь);

    Файл = Новый ЗаписьТекста(ИмяФайла);
    Файл.Записать("тест");
	Файл.Закрыть();
    
    СкопироватьФайл(ИмяФайла,ИмяКопии);

    Файл = Новый Файл(ИмяКопии);
    Результат = Файл.Существует();
  	УдалитьФайлы(Директория,"*.temp");
	УдалитьФайлы(ДиректорияДляКопирования,"*.temp");

	юТест.ПроверитьРавенство(Результат,Истина); 
    
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЗаписьВЛог() Экспорт
	Текст = "Тест записи в лог";
    ДобавитьЗаписьВЛог(Текст);
	Лог.Закрыть();

	ЧтениеТекста = Новый ЧтениеТекста(ПутьКЛогу);
    ПрочитанныйТекст = ЧтениеТекста.ПрочитатьСтроку();
    ЧтениеТекста.Закрыть();
	УдалитьФайлы(Директория,"*.log");

	юТест.ПроверитьРавенство(ПрочитанныйТекст,Строка(ТекущаяДата()) + " - " + Текст);

КонецПроцедуры

Функция ТребуетсяСкопироватьФайл(Файл)
    Возврат (ТекущаяДата()-Файл.ПолучитьВремяИзменения())<(СрокВМинутах*60);
КонецФункции // ТребуетсяСкопироватьФайл(Файл)

Процедура СкопироватьФайл(ИмяФайла,НовоеИмяФайла)
	КопироватьФайл(ИмяФайла, НовоеИмяФайла);    
КонецПроцедуры // СкопироватьФайл(Файл,ДиректорияДляКопирования)

Процедура ДобавитьЗаписьВЛог(Текст)
    ТекстДляЗаписи = Строка(ТекущаяДата()) + " - " + Текст;
    Лог.ЗаписатьСтроку(ТекстДляЗаписи);
КонецПроцедуры

///////////////////////////////////////////////////////////////////
// Точка входа

Инициализация();